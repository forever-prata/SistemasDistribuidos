# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pedidos_pb2 as pedidos__pb2


class PedidoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EnviarPedido = channel.unary_unary(
                '/pedidos.PedidoService/EnviarPedido',
                request_serializer=pedidos__pb2.Pedido.SerializeToString,
                response_deserializer=pedidos__pb2.RespostaPedido.FromString,
                )
        self.ReceberPedido = channel.unary_unary(
                '/pedidos.PedidoService/ReceberPedido',
                request_serializer=pedidos__pb2.Vazio.SerializeToString,
                response_deserializer=pedidos__pb2.Pedido.FromString,
                )
        self.AtualizarStatus = channel.unary_unary(
                '/pedidos.PedidoService/AtualizarStatus',
                request_serializer=pedidos__pb2.AtualizacaoStatus.SerializeToString,
                response_deserializer=pedidos__pb2.RespostaPedido.FromString,
                )
        self.MonitorarStatus = channel.unary_stream(
                '/pedidos.PedidoService/MonitorarStatus',
                request_serializer=pedidos__pb2.NumeroPedido.SerializeToString,
                response_deserializer=pedidos__pb2.StatusPedido.FromString,
                )


class PedidoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EnviarPedido(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceberPedido(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AtualizarStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MonitorarStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PedidoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EnviarPedido': grpc.unary_unary_rpc_method_handler(
                    servicer.EnviarPedido,
                    request_deserializer=pedidos__pb2.Pedido.FromString,
                    response_serializer=pedidos__pb2.RespostaPedido.SerializeToString,
            ),
            'ReceberPedido': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceberPedido,
                    request_deserializer=pedidos__pb2.Vazio.FromString,
                    response_serializer=pedidos__pb2.Pedido.SerializeToString,
            ),
            'AtualizarStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.AtualizarStatus,
                    request_deserializer=pedidos__pb2.AtualizacaoStatus.FromString,
                    response_serializer=pedidos__pb2.RespostaPedido.SerializeToString,
            ),
            'MonitorarStatus': grpc.unary_stream_rpc_method_handler(
                    servicer.MonitorarStatus,
                    request_deserializer=pedidos__pb2.NumeroPedido.FromString,
                    response_serializer=pedidos__pb2.StatusPedido.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pedidos.PedidoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PedidoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EnviarPedido(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pedidos.PedidoService/EnviarPedido',
            pedidos__pb2.Pedido.SerializeToString,
            pedidos__pb2.RespostaPedido.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceberPedido(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pedidos.PedidoService/ReceberPedido',
            pedidos__pb2.Vazio.SerializeToString,
            pedidos__pb2.Pedido.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AtualizarStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pedidos.PedidoService/AtualizarStatus',
            pedidos__pb2.AtualizacaoStatus.SerializeToString,
            pedidos__pb2.RespostaPedido.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MonitorarStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/pedidos.PedidoService/MonitorarStatus',
            pedidos__pb2.NumeroPedido.SerializeToString,
            pedidos__pb2.StatusPedido.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
